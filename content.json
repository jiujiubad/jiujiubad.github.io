{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"hello-world","slug":"hello-world","date":"2018-01-11T14:30:00.000Z","updated":"2018-01-11T15:40:26.000Z","comments":true,"path":"posts/b1d4025b/","link":"","permalink":"http://yoursite.com/posts/b1d4025b/","excerpt":"","text":"9999Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"hello","slug":"hello","permalink":"http://yoursite.com/categories/hello/"},{"name":"world","slug":"hello/world","permalink":"http://yoursite.com/categories/hello/world/"}],"tags":[{"name":"测试","slug":"测试","permalink":"http://yoursite.com/tags/测试/"}],"keywords":[{"name":"hello","slug":"hello","permalink":"http://yoursite.com/categories/hello/"},{"name":"world","slug":"hello/world","permalink":"http://yoursite.com/categories/hello/world/"}]},{"title":"VSCode 高效开发必装插件视频教程","slug":"vscode","date":"2017-09-22T01:00:00.000Z","updated":"2017-09-22T01:06:32.000Z","comments":true,"path":"posts/dcf198d6/","link":"","permalink":"http://yoursite.com/posts/dcf198d6/","excerpt":"\u0016 此课程为 VSCode 编辑器系列课程。VSCode 强大的插件库使得其在提升开发效率方面更加的无敌，系列课程给大家分享了必装插件的安装、配置与使用技巧相关的知识。","text":"\u0016 此课程为 VSCode 编辑器系列课程。VSCode 强大的插件库使得其在提升开发效率方面更加的无敌，系列课程给大家分享了必装插件的安装、配置与使用技巧相关的知识。 课程持续更新中，目前更新章节如下： 001 - 课程简介 002 - 如何让你的文件类型一目了然 003 - 如何更加高效地管理项目 004 - 自动格式化你的代码 005 - 如何一键搭建各类语言的学习测试环境 006 - 如何和 Chrome 联动调试 007 - 如何实时自动检测你的代码规范与代码中的错误 008 - 如何提升 React 等前端开发的效率 009 - 如何集成并美化你的终端到 VSCode 中 010 - Visual Studio 重度使用者如何迁移到 VSCode 课程地址: https://devopen.club/course/vscode","categories":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/categories/视频教程/"}],"tags":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/tags/视频教程/"},{"name":"VSCode","slug":"VSCode","permalink":"http://yoursite.com/tags/VSCode/"}],"keywords":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/categories/视频教程/"}]},{"title":"Webpack 2 视频教程 020 - Webpack 2 中的 HMR ( Hot Module Replacement )","slug":"webpack2-tech-020","date":"2017-05-23T11:00:00.000Z","updated":"2017-06-24T05:41:14.000Z","comments":true,"path":"posts/d9c8ff45/","link":"","permalink":"http://yoursite.com/posts/d9c8ff45/","excerpt":"这是我免费发布的高质量超清「Webpack 2 视频教程」。Webpack 作为目前前端开发必备的框架，Webpack 发布了 2.0 版本，此视频就是基于 2.0 的版本讲解的。这个基本就是目前国内最好的 Webpack 2.0 最好的学习视频了，希望可以对新手或者复习相关知识的朋友有用。源码中包含了课程中的思维导图源文件，使用的思维导图软件为 Mac 下的 iThoughtsX 。 课程地址: https://devopen.club/course/webpack2.html","text":"这是我免费发布的高质量超清「Webpack 2 视频教程」。Webpack 作为目前前端开发必备的框架，Webpack 发布了 2.0 版本，此视频就是基于 2.0 的版本讲解的。这个基本就是目前国内最好的 Webpack 2.0 最好的学习视频了，希望可以对新手或者复习相关知识的朋友有用。源码中包含了课程中的思维导图源文件，使用的思维导图软件为 Mac 下的 iThoughtsX 。 课程地址: https://devopen.club/course/webpack2.html Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分隔，等到实际需要的时候再异步加载。通过loader的转换，任何形式的资源都可以视作模块，比如 CommonJs 模块、 AMD 模块、 ES6 模块、CSS、图片、 JSON、Coffeescript、 LESS 等。 1. 视频课程简介此节课程主要对Webpack 2 中的 HMR ( Hot Module Replacement )进行了详细地讲解。 课程地址: https://devopen.club/course/webpack2.html 2. 课程源码地址https://github.com/ParryQiu/DevOpenClub-Tech-Webpack2 3. 视频课程地址 Webpack 2 前端开发教程 bilibili 完整播单 https://www.bilibili.com/video/av11128844/ Webpack 2 前端开发教程 Youtube 完整播单 https://www.youtube.com/playlist?list=PLXbU-2B80FvDu2YTKN42WvAVKWHs6XHRy Webpack 2 前端开发教程优酷完整播单 (因优酷审核太垃圾，不再更新到优酷。) http://list.youku.com/albumlist/show?id=49394464&amp;ascending=1&amp;page=1 如果需要 1080P 的视频，第一时间获取到后续的更新，以及对于相关前端技术的高质量讨论与提问，可以加入我们的「DevOpenClub 前端小密圈」进行相关交流。 课程已全部更新完毕，撒花~~~稍后会根据小密圈问题以及官方发布 Webpack 3 后进行适当地更新。关于课程的任何问题，都可以在我们的高质量前端开发小密圈中提问或交流。课程更新及高质量讨论小密圈地址：https://devopen.club/course/webpack2.html 4. 高质量前端开发小密圈DevOpenClub 一直致力于免费分享高质量的软件开发的相关视频教程，在每一门技术的学习交流过程中都和大家形成了一个非常明确的讨论圈。之前一直都是 QQ 群、微信群进行讨论，刚好最近「小密圈」流行，而且「小密圈」很好地解决了群交流的很多缺点。 有价值的信息不能沉淀的问题，有了小密圈，分享的东西都可以沉淀下来，和论坛一样随时可以翻看； 可以直接进行提问获得解答； 随时可以过滤掉垃圾信息，而且不受群垃圾消息的轰炸； 付费永远都是过滤垃圾信息最好的办法。 此小密圈功能 每日分享高质量的国外技术开发头条信息与资源； 获取每年所有原创开发视频教程的第一手更新； 获取百度云中分享的超清视频课程以及源码等相关资料； 获取其他高质量软件开发行业新闻、技术文章、教学视频分享； 第一时间获取视频更新提醒及观看密码； 遇到相关技术问题可以进行快速提问以及讨论交流； 群中认识更多的朋友以及合作开发项目的机会； 认识更多的行业朋友，或者交流自己的创业小项目。 如何加入使用微信识别下面的二维码（或点击下面的链接）即可加入，价格是小密圈能设置的最低价格，随着人数的增多会进行价格上调。加入后永久有效。 扫码或点击此链接加入点击此链接加入小密圈","categories":[{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/categories/Webpack/"}],"tags":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/tags/视频教程/"},{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/tags/Webpack/"}],"keywords":[{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/categories/Webpack/"}]},{"title":"Webpack 2 视频教程 018 - 使用可视化图表进行统计分析打包过程","slug":"webpack2-tech-018","date":"2017-05-21T11:00:00.000Z","updated":"2017-06-24T05:46:11.000Z","comments":true,"path":"posts/bd14a45/","link":"","permalink":"http://yoursite.com/posts/bd14a45/","excerpt":"这是我免费发布的高质量超清「Webpack 2 视频教程」。Webpack 作为目前前端开发必备的框架，Webpack 发布了 2.0 版本，此视频就是基于 2.0 的版本讲解的。这个基本就是目前国内最好的 Webpack 2.0 最好的学习视频了，希望可以对新手或者复习相关知识的朋友有用。源码中包含了课程中的思维导图源文件，使用的思维导图软件为 Mac 下的 iThoughtsX 。 课程地址: https://devopen.club/course/webpack2.html","text":"这是我免费发布的高质量超清「Webpack 2 视频教程」。Webpack 作为目前前端开发必备的框架，Webpack 发布了 2.0 版本，此视频就是基于 2.0 的版本讲解的。这个基本就是目前国内最好的 Webpack 2.0 最好的学习视频了，希望可以对新手或者复习相关知识的朋友有用。源码中包含了课程中的思维导图源文件，使用的思维导图软件为 Mac 下的 iThoughtsX 。 课程地址: https://devopen.club/course/webpack2.html Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分隔，等到实际需要的时候再异步加载。通过loader的转换，任何形式的资源都可以视作模块，比如 CommonJs 模块、 AMD 模块、 ES6 模块、CSS、图片、 JSON、Coffeescript、 LESS 等。 1. 视频课程简介此节课程主要对使用可视化图表进行统计分析打包过程进行了详细地讲解。 课程地址: https://devopen.club/course/webpack2.html 2. 课程源码地址https://github.com/ParryQiu/DevOpenClub-Tech-Webpack2 3. 视频课程地址 Webpack 2 前端开发教程 bilibili 完整播单 https://www.bilibili.com/video/av11128844/ Webpack 2 前端开发教程 Youtube 完整播单 https://www.youtube.com/playlist?list=PLXbU-2B80FvDu2YTKN42WvAVKWHs6XHRy Webpack 2 前端开发教程优酷完整播单 (因优酷审核太垃圾，不再更新到优酷。) http://list.youku.com/albumlist/show?id=49394464&amp;ascending=1&amp;page=1 如果需要 1080P 的视频，第一时间获取到后续的更新，以及对于相关前端技术的高质量讨论与提问，可以加入我们的「DevOpenClub 前端小密圈」进行相关交流。 课程已全部更新完毕，撒花~~~稍后会根据小密圈问题以及官方发布 Webpack 3 后进行适当地更新。关于课程的任何问题，都可以在我们的高质量前端开发小密圈中提问或交流。课程更新及高质量讨论小密圈地址：https://devopen.club/course/webpack2.html 4. 高质量前端开发小密圈DevOpenClub 一直致力于免费分享高质量的软件开发的相关视频教程，在每一门技术的学习交流过程中都和大家形成了一个非常明确的讨论圈。之前一直都是 QQ 群、微信群进行讨论，刚好最近「小密圈」流行，而且「小密圈」很好地解决了群交流的很多缺点。 有价值的信息不能沉淀的问题，有了小密圈，分享的东西都可以沉淀下来，和论坛一样随时可以翻看； 可以直接进行提问获得解答； 随时可以过滤掉垃圾信息，而且不受群垃圾消息的轰炸； 付费永远都是过滤垃圾信息最好的办法。 此小密圈功能 每日分享高质量的国外技术开发头条信息与资源； 获取每年所有原创开发视频教程的第一手更新； 获取百度云中分享的超清视频课程以及源码等相关资料； 获取其他高质量软件开发行业新闻、技术文章、教学视频分享； 第一时间获取视频更新提醒及观看密码； 遇到相关技术问题可以进行快速提问以及讨论交流； 群中认识更多的朋友以及合作开发项目的机会； 认识更多的行业朋友，或者交流自己的创业小项目。 如何加入使用微信识别下面的二维码（或点击下面的链接）即可加入，价格是小密圈能设置的最低价格，随着人数的增多会进行价格上调。加入后永久有效。 扫码或点击此链接加入点击此链接加入小密圈","categories":[{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/categories/Webpack/"}],"tags":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/tags/视频教程/"},{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/tags/Webpack/"}],"keywords":[{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/categories/Webpack/"}]},{"title":"Webpack 2 视频教程 012 - 理解Webpack 中的 CSS 作用域与 CSS Modules","slug":"webpack2-tech-012","date":"2017-05-15T11:00:00.000Z","updated":"2017-06-24T05:46:04.000Z","comments":true,"path":"posts/64d60628/","link":"","permalink":"http://yoursite.com/posts/64d60628/","excerpt":"这是我免费发布的高质量超清「Webpack 2 视频教程」。Webpack 作为目前前端开发必备的框架，Webpack 发布了 2.0 版本，此视频就是基于 2.0 的版本讲解的。这个基本就是目前国内最好的 Webpack 2.0 最好的学习视频了，希望可以对新手或者复习相关知识的朋友有用。","text":"这是我免费发布的高质量超清「Webpack 2 视频教程」。Webpack 作为目前前端开发必备的框架，Webpack 发布了 2.0 版本，此视频就是基于 2.0 的版本讲解的。这个基本就是目前国内最好的 Webpack 2.0 最好的学习视频了，希望可以对新手或者复习相关知识的朋友有用。 Webpack 是当下最热门的前端资源模块化管理和打包工具。它可以将许多松散的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分隔，等到实际需要的时候再异步加载。通过loader的转换，任何形式的资源都可以视作模块，比如 CommonJs 模块、 AMD 模块、 ES6 模块、CSS、图片、 JSON、Coffeescript、 LESS 等。 1. 视频课程简介此节课程主要对 Webpack 2 中 CSS 作用域与 CSS Modules进行了详细地讲解。 2. 课程源码地址https://github.com/ParryQiu/DevOpenClub-Tech-Webpack2 3. 视频课程地址优酷超清视频：http://v.youku.com/v_show/id_XMjc0Nzg2NzcxNg==.html 如果需要 1080P 的视频，第一时间获取到后续的更新，以及对于相关前端技术的高质量讨论与提问，可以加入我们的「DevOpenClub 前端小密圈」进行相关交流。 4. 高质量前端开发小密圈DevOpenClub 一直致力于免费分享高质量的软件开发的相关视频教程，在每一门技术的学习交流过程中都和大家形成了一个非常明确的讨论圈。之前一直都是 QQ 群、微信群进行讨论，刚好最近「小密圈」流行，而且「小密圈」很好地解决了群交流的很多缺点。 有价值的信息不能沉淀的问题，有了小密圈，分享的东西都可以沉淀下来，和论坛一样随时可以翻看； 可以直接进行提问获得解答； 随时可以过滤掉垃圾信息，而且不受群垃圾消息的轰炸； 付费永远都是过滤垃圾信息最好的办法。 此小密圈功能 每日分享高质量的国外技术开发头条信息与资源； 获取每年所有原创开发视频教程的第一手更新； 获取百度云中分享的超清视频课程以及源码等相关资料； 获取其他高质量软件开发行业新闻、技术文章、教学视频分享； 第一时间获取视频更新提醒及观看密码； 遇到相关技术问题可以进行快速提问以及讨论交流； 群中认识更多的朋友以及合作开发项目的机会； 认识更多的行业朋友，或者交流自己的创业小项目。 如何加入使用微信识别下面的二维码（或点击下面的链接）即可加入，价格是小密圈能设置的最低价格，随着人数的增多会进行价格上调。加入后永久有效。 扫码或点击此链接加入点击此链接加入小密圈","categories":[{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/categories/Webpack/"}],"tags":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/tags/视频教程/"},{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/tags/Webpack/"}],"keywords":[{"name":"Webpack","slug":"Webpack","permalink":"http://yoursite.com/categories/Webpack/"}]},{"title":"Atom 编辑器系列视频课程","slug":"atom_video_lesson","date":"2017-01-11T16:10:00.000Z","updated":"2017-01-18T07:01:24.000Z","comments":true,"path":"posts/d3902ab9/","link":"","permalink":"http://yoursite.com/posts/d3902ab9/","excerpt":"此课程为 Atom 编辑器系列课程，主要介绍了 Atom 的高效开发技巧以及必备插件。","text":"此课程为 Atom 编辑器系列课程，主要介绍了 Atom 的高效开发技巧以及必备插件。 课程列表 Atom编辑器系列课程 #1 - Atom简介 Atom编辑器系列课程 #2 - 设置简介 Atom编辑器系列课程 #3 - 快速格式化代码插件 atom-beautify [#4 - 即将更新] 优酷播单地址 关注 讲师微博 @Parry 获取第一时间更新提醒。视频版权为 新浪微博 @Parry 所有。您可以随意下载、分享视频内容，不过请勿用于商业行为，我们保留追究所有法律责任的权利！","categories":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/categories/视频教程/"}],"tags":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/tags/视频教程/"},{"name":"Atom","slug":"Atom","permalink":"http://yoursite.com/tags/Atom/"}],"keywords":[{"name":"视频教程","slug":"视频教程","permalink":"http://yoursite.com/categories/视频教程/"}]},{"title":"Ionic 2 官方示例程序 Super Starter","slug":"ionic_super_starter","date":"2016-12-28T09:00:00.000Z","updated":"2016-12-28T12:49:58.000Z","comments":true,"path":"posts/543ad9c1/","link":"","permalink":"http://yoursite.com/posts/543ad9c1/","excerpt":"本文分享了 Ionic 2 官方示例程序 Super Starter 的简要介绍与安装运行的方法，最好的学习示例代码，项目共包含了 14 个通用的页面设计，如：引导页、主页面详情页面、登录注册、设置、国际化（多语言）、API、增删改查、预览等页面，供参考。","text":"本文分享了 Ionic 2 官方示例程序 Super Starter 的简要介绍与安装运行的方法，最好的学习示例代码，项目共包含了 14 个通用的页面设计，如：引导页、主页面详情页面、登录注册、设置、国际化（多语言）、API、增删改查、预览等页面，供参考。 1. 环境配置与更新安装 Ionic 2 的开发环境即可，这部分内容可以参考之前的 Q&amp;A 文章。完整的安装命令为：npm install -g cordova ionic。 如果不是最新版本的 Ionic 2，建议执行命令进行更新到最新版本，对于学习与体验该程序都是应该的。更新命令如下。 注意所有的命令前为了避免权限问题最好添加 sudo。 2. Super Starter 的安装执行下面的命令进行安装，注意国内的网络环境最好翻墙执行，处理网络问题可以参考之前的博文。 3. 运行在建立的项目目录中执行 sudo ionic serve 命令启动项目即可看到 Super Starter 的项目运行情况。或者部署到 iOS 或者 Android 设备中体验学习。项目共包含了 14 个通用的页面设计，如：引导页、主页面详情页面、登录注册、设置、国际化（多语言）、API、增删改查、预览等页面。项目源代码地址：https://github.com/driftyco/ionic-starter-super","categories":[{"name":"App 开发","slug":"App-开发","permalink":"http://yoursite.com/categories/App-开发/"},{"name":"Hybrid App","slug":"App-开发/Hybrid-App","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/"},{"name":"Ionic","slug":"App-开发/Hybrid-App/Ionic","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/Ionic/"}],"tags":[{"name":"Hybrid App","slug":"Hybrid-App","permalink":"http://yoursite.com/tags/Hybrid-App/"},{"name":"Ionic","slug":"Ionic","permalink":"http://yoursite.com/tags/Ionic/"},{"name":"Ionic 入门与实战","slug":"Ionic-入门与实战","permalink":"http://yoursite.com/tags/Ionic-入门与实战/"}],"keywords":[{"name":"App 开发","slug":"App-开发","permalink":"http://yoursite.com/categories/App-开发/"},{"name":"Hybrid App","slug":"App-开发/Hybrid-App","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/"},{"name":"Ionic","slug":"App-开发/Hybrid-App/Ionic","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/Ionic/"}]},{"title":"Ionic2 下处理 Android 设备下返回按钮的事件","slug":"ionic2_android_handling-the-hardware-back-buttons","date":"2016-09-25T08:06:00.000Z","updated":"2016-09-25T08:07:21.000Z","comments":true,"path":"posts/5f54aa31/","link":"","permalink":"http://yoursite.com/posts/5f54aa31/","excerpt":"本文分享了 Ionic2 下处理 Android 设备下返回按钮的事件，供参考。","text":"本文分享了 Ionic2 下处理 Android 设备下返回按钮的事件，供参考。 代码中我分享了如何捕捉 Ionic2 项目在 Android 设备下返回按钮事件，并在捕捉到的事件中可以灵活根据需求编写相关业务逻辑，如退出、返回等。详细的逻辑处理参见下面代码即可。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455import &#123;Component&#125; from '@angular/core';import &#123;Platform, ionicBootstrap&#125; from 'ionic-angular';import &#123;StatusBar&#125; from 'ionic-native';import &#123;TabsPage&#125; from './pages/tabs/tabs';import &#123;App, NavController&#125; from 'ionic-angular';import &#123;ViewChild&#125; from '@angular/core';@Component(&#123; template: '&lt;ion-nav #rootNavController [root]=\"rootPage\" #content swipe-back-enabled=\"false\"&gt;&lt;/ion-nav&gt;'&#125;)export class MyApp &#123; @ViewChild('rootNavController') nav: NavController; private rootPage: any; constructor(private platform: Platform) &#123; this.rootPage = TabsPage; platform.ready().then(() =&gt; &#123; // Okay, so the platform is ready and our plugins are available. // Here you can do any higher level native things you might need. StatusBar.styleDefault(); //退出按钮重写******开始****** document.addEventListener('backbutton', () =&gt; &#123; let activeVC = this.nav.getActive(); let page = activeVC.instance; if (!(page instanceof TabsPage)) &#123; if (!this.nav.canGoBack()) &#123; console.log('检测到在根视图点击了返回按钮。'); return platform.exitApp(); &#125; console.log('检测到在子路径中点击了返回按钮。'); return this.nav.pop(); &#125; let tabs = page.tabs; let activeNav = tabs.getSelected(); if (!activeNav.canGoBack()) &#123; console.log('检测到在 tab 页面的顶层点击了返回按钮。'); return platform.exitApp(); &#125; console.log('检测到当前 tab 弹出层的情况下点击了返回按钮。'); return activeNav.pop(); &#125;, false); //退出按钮重写******结束****** &#125;); &#125;&#125;ionicBootstrap(MyApp);","categories":[{"name":"App 开发","slug":"App-开发","permalink":"http://yoursite.com/categories/App-开发/"},{"name":"Hybrid App","slug":"App-开发/Hybrid-App","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/"},{"name":"Ionic","slug":"App-开发/Hybrid-App/Ionic","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/Ionic/"}],"tags":[{"name":"Hybrid App","slug":"Hybrid-App","permalink":"http://yoursite.com/tags/Hybrid-App/"},{"name":"Ionic","slug":"Ionic","permalink":"http://yoursite.com/tags/Ionic/"},{"name":"Ionic 入门与实战","slug":"Ionic-入门与实战","permalink":"http://yoursite.com/tags/Ionic-入门与实战/"}],"keywords":[{"name":"App 开发","slug":"App-开发","permalink":"http://yoursite.com/categories/App-开发/"},{"name":"Hybrid App","slug":"App-开发/Hybrid-App","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/"},{"name":"Ionic","slug":"App-开发/Hybrid-App/Ionic","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/Ionic/"}]},{"title":"Ionic 入门与实战之第二章第一节：Ionic 环境搭建之开发环境配置","slug":"ionic_chapter_2_install","date":"2016-04-26T12:56:00.000Z","updated":"2016-05-18T03:06:56.000Z","comments":true,"path":"posts/fdbc7bb9/","link":"","permalink":"http://yoursite.com/posts/fdbc7bb9/","excerpt":"本文是「Ionic 入门与实战」系列连载的第二章第一节，主要对 Ionic 的开发环境配置做了简要的介绍，本文介绍的开发环境为 Mac 系统，Windows 系统基本类似，少许差别请查阅相关文档即可。","text":"本文是「Ionic 入门与实战」系列连载的第二章第一节，主要对 Ionic 的开发环境配置做了简要的介绍，本文介绍的开发环境为 Mac 系统，Windows 系统基本类似，少许差别请查阅相关文档即可。 1. Ionic 环境的安装1.1 Node.js 与 npm 介绍Node.js 与 npm 是 Ionic 环境的基础，这里我们做一下简要介绍。Node.js 是基于 Chrome’s V8 JavaScript engine 构建的一个JavaScript runtime （一般翻译为 JavaScript 运行时），特点是事件驱动、非阻塞等。npm 是 Node.js 中的 JavaScript 包管理。目前已经是最大的开源组件库，使用起来非常方便，也非常值得学习。以上两个组件，只需要安装 Node.js 即可。 Mac 系统中，下载 pkg 安装； Windows 系统中，下载对应的 msi 安装，注意 32 位和 64 位版本的区别。 下载地址：https://nodejs.org/en/download/安装后，可以通过 node -v 查看当前版本，确认是否安装成功或者查看当前的 Node.js 版本。 Ionic 推荐安装 Node.js 的版本为 v4.0+，即高于 4.0 的版本即可。 1.2 Ionic 的安装这里使用最新的 v2.0 beta 版本进行学习，而且 2.0 版本对于 1.0 版本的所有功能都进行了兼容，所以项目如果从 1.0 转成 2.0，也是可以平滑过渡的。安装 Ionic，使用以下命令即可。 1$ npm install -g ionic@beta 如果需要安装 Ionic 1.0 版本，使用如下命令即可。 1$ npm install -g ionic 2.初始化空项目并体验安装了 Ionic 后，使用如下命令初始化一个空项目，名称为 ionicdemo。 1$ ionic start ionicdemo --v2 ionic start 命令默认采用 tabs template 作为初始化项目的模板，如果需要其他的模板，那么在项目名称后面添加上对应的模板名称即可，如要使用 tutorial template 作为模板，那么命令如下。 1$ ionic start ionicdemo tutorial --v2 其他的模板列表参见这里。 注意这里的 --v2 参数，因为 ionic 命令是和 1.0 版本公用的，所以添加 --v2 参数明确了使用2.0 版本去初始化项目。此过程主要安装了必要的 npm modules，并且安装依赖的 Cordova 组件。这里还有一个技巧，就是如果想使用 TypeScript，那么只要在命令后面添加 --ts 参数即可。 进入项目目录。 1$ cd ionicdemo 运行，在浏览器中查看效果。 1$ ionic serve 当需要在浏览器中模拟 iPhone 下的 UI 展示，需要选择对应的模拟设备，刷新即可。 这里的原理是 Chrome 修改了对应的 User-Agent，Ionic 根据此进行了对应的 UI 呈现。在控制台中可以看到。 使用浏览器进行开发调试是非常方便的方案，不需要频繁连接真机，并且可以方便直观地借助 Chrome 控制台进行样式、JavaScript 等调试。如果需要在模拟器上运行，那么 iOS 设备执行下面的命令即可。 1$ ionic run ios 如果是 Android 设备，那么执行下面的命令。 1$ ionic run android 这样就可以在对应的模拟器上运行了，至于详细的 iOS/Android 的环境配置，我们在下面的章节将有详细地讲解。","categories":[{"name":"App 开发","slug":"App-开发","permalink":"http://yoursite.com/categories/App-开发/"},{"name":"Hybrid App","slug":"App-开发/Hybrid-App","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/"},{"name":"Ionic","slug":"App-开发/Hybrid-App/Ionic","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/Ionic/"}],"tags":[{"name":"Hybrid App","slug":"Hybrid-App","permalink":"http://yoursite.com/tags/Hybrid-App/"},{"name":"Ionic","slug":"Ionic","permalink":"http://yoursite.com/tags/Ionic/"},{"name":"Ionic 入门与实战","slug":"Ionic-入门与实战","permalink":"http://yoursite.com/tags/Ionic-入门与实战/"},{"name":"书籍连载","slug":"书籍连载","permalink":"http://yoursite.com/tags/书籍连载/"}],"keywords":[{"name":"App 开发","slug":"App-开发","permalink":"http://yoursite.com/categories/App-开发/"},{"name":"Hybrid App","slug":"App-开发/Hybrid-App","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/"},{"name":"Ionic","slug":"App-开发/Hybrid-App/Ionic","permalink":"http://yoursite.com/categories/App-开发/Hybrid-App/Ionic/"}]},{"title":".NET 性能调优之一：ANTS Performance Profiler 的使用","slug":"DotNet_Performance_Tuning_ANTS_Performance_Profiler","date":"2013-01-03T17:29:00.000Z","updated":"2016-01-24T01:41:42.000Z","comments":true,"path":"posts/79a87a16/","link":"","permalink":"http://yoursite.com/posts/79a87a16/","excerpt":"在使用 .NET 进行快速地上手与开发出应用程序后，接下来面临的问题可能就是程序性能调优方面的问题，而性能调优有时候会涉及方方面面的问题，如程序宿主系统、数据库、网络环境等等，而当程序异常庞大复杂的时候，性能调优将变得更加无从下手。本系列文章主要会介绍一些 .NET 性能调优的工具、Web 性能优化的规则（如 YSlow ）及方法等等内容。","text":"在使用 .NET 进行快速地上手与开发出应用程序后，接下来面临的问题可能就是程序性能调优方面的问题，而性能调优有时候会涉及方方面面的问题，如程序宿主系统、数据库、网络环境等等，而当程序异常庞大复杂的时候，性能调优将变得更加无从下手。本系列文章主要会介绍一些 .NET 性能调优的工具、Web 性能优化的规则（如 YSlow ）及方法等等内容。 ANTS Performance Profiler 的基本使用ANTS Performance Profiler 是 RedGate 旗下强大的性能调优产品，官方产品页面在 这里 。先来看一下软件的基本使用。使用下面这段代码进行简单的测试。这是一个控制台应用程序，程序很简单，先进行 10000 次循环，输出和，再使用 LINQ 在 list 里找出 1000 的值输出。12345678910111213141516171819static void Main()&#123; var list = new List&lt;int&gt;(); var sum = 0; for (var i = 0; i &lt; 10000; i++) &#123; sum += i; list.Add(i); &#125; Console.WriteLine(sum); //find the value use linq: 1000 var result = list.Where(p =&gt; p.Equals(1000)); foreach (var i in result) &#123; Console.WriteLine(i); &#125; Console.ReadKey();&#125; 编译程序后，启动 ANTS Performance Profiler ，会自动弹出向导页面，在此页面中，可以看到软件支持多种 .NET 程序的性能监控，如 EXE，web，Windows Service 等等。而在 Performace Counters 中可以根据需要选择多种计数器，IO，内存分配，处理器等等。针对测试 DEMO，选择编译后的 exe 文件路径，因为刚才是 debug 编译，所以选择程序文件夹下 \\bin\\Debug\\ 里面的exe 即可。在 Profiling Mode 里可以选择监控的级别，基本就是监控信息的多少与速度的权衡，默认选择「最详细」即可。其他的详细设置可以参考帮助文档。点击「Start Profiling」，启动程序。 分析结果的查看与分析软件的基本工作原理是在 .NET 编译出的 IL 代码里放入钩子用来记录时间，然后通过直观的界面显示出哪部分代码耗能最大。所以这是性能调优最直接的方法，针对最耗时的代码段进行优化即可。点击「Start Profiling」后启动之前编译的程序，软件开始执行，如果是其他交互程序如 winform、web 等，操作完需要进行性能调优的功能后，在顶部的运行时间轴里用鼠标选定需要查看的时间段即可，一般有性能问题的时间段会出现一个波峰，选定那个时间段即可。 选定后可以立即在下面的结果窗口中看到最耗时的方法，比如上面的 DEMO，当然性能都消耗在了 Main 函数上。 软件提供了多种度量值查看性能损耗，有百分比和多种时间格式，这里选定「秒」作为度量单位。 再选择要查看的函数，软件强大之处就显现出来了。 右侧的红色标线，点击可以快速定位到最耗能的代码，颜色越深表示那段代码越耗能。 左侧可以看到行号，此段代码执行的次数（Hit Count），平均执行时间，总的执行时间，当然还可以同时看到代码供分析使用。 至于 DEMO 里这段代码为什么第一次执行 Console.WriteLine 如此耗能，我想如果你认真看了《CLR via C#》的第一章就应该能知道答案了。 当然你还可以点击层次结构图标，查看更加直观的性能损耗，就像下面这样。这样的层次结构图还有一个好处就是可以看到 .NET Framework 的内部实现。当进行一些决策，比如是用原生的功能还是第三方组件时，这个功能会变得非常好用，因为通过它能比较直观的地看到内部实现的性能瓶颈在哪里。 结语ANTS Performance Profiler 是我性能调优时最先使用也是最喜欢使用的工具，所以放在了第一篇文章里来分享给大家，希望能给各位带来点帮助。它非常的直观、强大，因为手头复杂的项目不适合用来做 DEMO，所以只是写了段简单的代码作演示，它的强大之处还待你真正遇到性能问题使用它时去好好体会。文章有所疏漏和要补充的，请留言一起讨论，也请关注后续的相关文章。","categories":[{"name":".NET","slug":"NET","permalink":"http://yoursite.com/categories/NET/"}],"tags":[{"name":".NET","slug":"NET","permalink":"http://yoursite.com/tags/NET/"},{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://yoursite.com/tags/ASP-NET/"},{"name":"Winform","slug":"Winform","permalink":"http://yoursite.com/tags/Winform/"},{"name":"性能调优","slug":"性能调优","permalink":"http://yoursite.com/tags/性能调优/"}],"keywords":[{"name":".NET","slug":"NET","permalink":"http://yoursite.com/categories/NET/"}]}]}